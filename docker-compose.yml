services:
  # --- Base de datos para Keycloak ---
  postgres:
    image: postgres:17
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak-bd
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    restart: always

  # --- Keycloak ---
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.1
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak-bd
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_SCHEMA: keycloak
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      KC_HOSTNAME: 192.168.2.5
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_BACKCHANNEL: "false"
      KC_BOOTSTRAP_ADMIN_USER: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    command: start-dev
    ports:
      - "8080:8080"
    volumes:
      - ./providers:/opt/keycloak/providers
    depends_on:
      - postgres
    restart: always
  nats-server:
    build: ./Gateway-Service/nats
    ports:
      - 8222:8222
      - 4222:4222
    restart: always

  gateway-service:
    build: ./Gateway-Service
    env_file:
      - .env
      - ./Gateway-Service/.env.compose
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./Gateway-Service/src:/usr/src/app/src
      - ./Gateway-Service/package.json:/usr/src/app/package.json
    command: yarn start:dev
    restart: always

  beneficiary-service:
    build: ./Beneficiary-Service
    env_file:
      - .env
      - ./Beneficiary-Service/.env.compose
    volumes:
      - ./Beneficiary-Service/src:/usr/src/app/src
      - ./Beneficiary-Service/package.json:/usr/src/app/package.json
    command: yarn start:dev
    restart: always

  global-service:
    build: ./Global-Service
    env_file:
      - .env
      - ./Global-Service/.env.compose
    volumes:
      - ./Global-Service/src:/usr/src/app/src
      - ./Global-Service/package.json:/usr/src/app/package.json
    command: yarn start:dev
    restart: always

  auth-service:
    build: ./Auth-Service
    env_file:
      - .env
      - ./Auth-Service/.env.compose
    volumes:
      - ./Auth-Service/src:/usr/src/app/src
      - ./Auth-Service/package.json:/usr/src/app/package.json
    command: yarn start:dev
    restart: always

  kiosk-service:
    build: ./Kiosk-Service
    env_file:
      - .env
      - ./Kiosk-Service/.env.compose
    volumes:
      - ./Kiosk-Service/src:/usr/src/app/src
      - ./Kiosk-Service/package.json:/usr/src/app/package.json
    command: yarn start:dev
    restart: always

volumes:
  postgres_data:
    external: true
    name: keycloak_postgres_data 