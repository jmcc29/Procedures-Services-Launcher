services:

  nats-server:
    build: ./Gateway-Service/nats
    ports:
      - 4222:4222
    restart: always

  gateway-service:
    build:
      context: ./Gateway-Service
      dockerfile: dockerfile.prod
    env_file:
      - .env
      - ./Gateway-Service/.env.compose
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./Gateway-Service/src:/usr/src/app/src
      - ./Gateway-Service/package.json:/usr/src/app/package.json
    restart: always

  beneficiary-service:
    build:
      context: ./Beneficiary-Service
      dockerfile: dockerfile.prod
    env_file:
      - .env
      - ./Beneficiary-Service/.env.compose
    volumes:
      - ./Beneficiary-Service/src:/usr/src/app/src
      - ./Beneficiary-Service/package.json:/usr/src/app/package.json
    restart: always

  global-service:
    build:
      context: ./Global-Service
      dockerfile: dockerfile.prod
    env_file:
      - .env
      - ./Global-Service/.env.compose
    volumes:
      - ./Global-Service/src:/usr/src/app/src
      - ./Global-Service/package.json:/usr/src/app/package.json
    restart: always

  auth-service:
    build:
      context: ./Auth-Service
      dockerfile: dockerfile.prod
    env_file:
      - .env
      - ./Auth-Service/.env.compose
    volumes:
      - ./Auth-Service/src:/usr/src/app/src
      - ./Auth-Service/package.json:/usr/src/app/package.json
    restart: always

  kiosk-service:
    build:
      context: ./Kiosk-Service
      dockerfile: dockerfile.prod
    env_file:
      - .env
      - ./Kiosk-Service/.env.compose
    volumes:
      - ./Kiosk-Service/src:/usr/src/app/src
      - ./Kiosk-Service/package.json:/usr/src/app/package.json
    restart: always

  app-mobile-service:
    build:
      context: ./App-Mobile-Service
      dockerfile: dockerfile.prod
    env_file:
      - .env
      - ./App-Mobile-Service/.env.compose
    volumes:
      - ./App-Mobile-Service/src:/usr/src/app/src
      - ./App-Mobile-Service/package.json:/usr/src/app/package.json
    restart: always
  
  records-service:
    build:
      context: ./Records-Service
      dockerfile: dockerfile.prod
    env_file:
      - .env
      - ./Records-Service/.env.compose
    volumes:
      - ./Records-Service/src:/usr/src/app/src
      - ./Records-Service/package.json:/usr/src/app/package.json
    restart: always